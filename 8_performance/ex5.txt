The code below describes a simple function in RISC-V assembly.
    1 or t1, t2, t3
    2 or t2, t1, t4
    3 or t1, t1, t2
Assume the following cycle times for each of the options related to forwarding;
Without forwarding:250ps
With Full Forwarding:300ps

Exercise 5.1: Indicate the dependencies and their type: Read After Write (RAW), Write After Read (WAR), Write after Write (WAW).
- RAW on t1 from I1 to I2 and I3
- RAW on t2 from I2 to I3
- WAR on t2 from I1 to I2
- WAR on t1 from I2 to I3
- WAW on t1 from I1 to I3

Exercise 5.2: Assume there is no forwarding in the pipelined processor.
Indicate hazards and add nop (no operation) instructions to eliminate them.
    1 or t1, t2, t3
    2 nop
    3 nop
    4 or t2, t1, t4
    5 nop
    6 nop
    7 or t1, t1, t2

Exercise 5.3: Assume there is full forwarding in the pipelined processor. Indicate the remaining hazards and add nop (no operation)
instructions to eliminate them. Compared the speedup achieved by adding full forwarding to a pipeline with no forwarding.
There are no hazards anymore. (Caution: if there were loads as well, then hazards could still arise)
The execution time without forwarding = 5 * 250ps + 6 * 250ps = 2750ps
The execution time with full forwarding = 5 * 300ps + 2 * 300ps = 2100ps (Speedup = 650ps)
